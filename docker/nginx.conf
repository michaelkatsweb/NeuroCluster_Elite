# File: nginx.conf
# Path: NeuroCluster-Elite/docker/nginx.conf
# Description: Production Nginx configuration for NeuroCluster Elite
#
# This configuration provides a high-performance reverse proxy setup for the
# NeuroCluster Elite trading platform with the following features:
# - Load balancing across multiple application instances
# - SSL/TLS termination with modern security
# - Static file serving with aggressive caching
# - WebSocket support for real-time data
# - Rate limiting and DDoS protection
# - Gzip compression for better performance
# - Security headers and best practices
# - Health checks and monitoring endpoints
# - Custom error pages
#
# Usage:
#   docker run -v $(pwd)/docker/nginx.conf:/etc/nginx/nginx.conf nginx
#   docker-compose up nginx
#
# Author: Your Name
# Created: 2025-06-30
# Version: 1.0.0
# License: MIT

# Main configuration
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

# Worker configuration
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP configuration
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ==================== LOGGING ====================
    
    # Custom log format for NeuroCluster Elite
    log_format neurocluster '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           'rt=$request_time uct="$upstream_connect_time" '
                           'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    # Access log
    access_log /var/log/nginx/access.log neurocluster;
    
    # Error log for debugging
    error_log /var/log/nginx/error.log warn;

    # ==================== PERFORMANCE SETTINGS ====================
    
    # Basic performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 4096;
    
    # Hide nginx version
    server_tokens off;
    
    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 50m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_requests 100;
    send_timeout 10;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # ==================== RATE LIMITING ====================
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # ==================== UPSTREAM SERVERS ====================
    
    # NeuroCluster Elite Dashboard (Streamlit)
    upstream neurocluster_dashboard {
        least_conn;
        server neurocluster-app:8501 max_fails=3 fail_timeout=30s;
        # Add more instances for load balancing:
        # server neurocluster-app-2:8501 max_fails=3 fail_timeout=30s;
        # server neurocluster-app-3:8501 max_fails=3 fail_timeout=30s;
        
        # Health check (requires nginx-plus or custom module)
        # health_check interval=10s fails=3 passes=2;
    }
    
    # NeuroCluster Elite API (FastAPI)
    upstream neurocluster_api {
        least_conn;
        server neurocluster-api:8000 max_fails=3 fail_timeout=30s;
        # Add more instances for load balancing:
        # server neurocluster-api-2:8000 max_fails=3 fail_timeout=30s;
        # server neurocluster-api-3:8000 max_fails=3 fail_timeout=30s;
        
        # Keep alive connections
        keepalive 32;
    }

    # ==================== SSL CONFIGURATION ====================
    
    # SSL settings (modern configuration)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # ==================== MAIN SERVER (HTTP REDIRECT) ====================
    
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        # Health check endpoint (no redirect)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Redirect all HTTP to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # ==================== MAIN SERVER (HTTPS) ====================
    
    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name neurocluster.local *.neurocluster.local;
        
        # SSL certificates (update paths as needed)
        ssl_certificate /etc/nginx/ssl/neurocluster.crt;
        ssl_certificate_key /etc/nginx/ssl/neurocluster.key;
        
        # Root directory for static files
        root /var/www/neurocluster;
        index index.html;
        
        # Rate limiting
        limit_req zone=general burst=20 nodelay;
        limit_conn conn_limit_per_ip 20;

        # ==================== DASHBOARD (STREAMLIT) ====================
        
        location / {
            # Rate limiting for dashboard
            limit_req zone=general burst=10 nodelay;
            
            # Proxy settings
            proxy_pass http://neurocluster_dashboard;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Streamlit specific headers
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
            proxy_redirect off;
            
            # Buffer settings for large responses
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            
            # Handle Streamlit's server-sent events
            proxy_cache off;
            proxy_set_header Cache-Control no-cache;
        }
        
        # Streamlit WebSocket endpoint
        location /_stcore/stream {
            proxy_pass http://neurocluster_dashboard;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded